<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEALS0AAAEAIAA0IQAAFgAAACgAAAAtAAAAWgAAAAEAIAAAAAAApB8AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////AP///wD///8A////AP///wD///8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAWRQwAAAAAAQoZEgkoX0QbLmxOJC1sTiYsbE0mLGxNJixsTSYsbE0mLGxNJixs
        TSYsbE0mLGxNJixsTSYsa00mLGpNJitqTCYra00mK2pNJipqTSYqa00mKmxNJipsTSYqbE0mKmxNJipr
        TSYqak0mKmlNJippTSYqak0mKmxNJSpsTSUqbE0lKmpMJCReQhwMHRIKAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAABAYHAAAAAAAAAAABG0IxDzSAXUNBnnGERaZ4n0SoeKJEqHiiRKh4okSoeKJEqHiiRKh4okSo
        eKJEqHiiRKh4okSneKJEpnihQ6R3okOkd6JDpXeiQ6R3oUKkd6JCpneiQqd3okKnd6JBp3eiQad3okGm
        d6JBpXeiQaV3okGld6JBpXehQKV2oUCldqFApXaiQKR1nzycb4UygFpEGkEwDwAAAAEAAAAAAAoRAAAA
        AAAAAAAAMnlYACpmSgAYOSoFO5BoPUm0grNNvorsTsGL9E7Bi/VOwYv1TsGL9U7Bi/VOwYv1TcGL9U3B
        i/VNwYv1TcGL9U3Ai/VNv4r1TL2J9Uy9ifVMvYn1TL6J9Uu+ifVMv4r1TMCK9UzAivVMwIr1S8CK9UvA
        ivVLwIr1S7+J9UrAifVKv4n1Sr+J9Um/ifVJv4n1Sb+I9Em8huxFsn+0No1lPhA1JgYugl0Arf//AAAA
        AAAAAAAAaf+8AEm2ggA7lWoRRq99d07BjOlQxY//UMWP/1DFj/9QxY//UMWP/1DFj/9QxY//T8WP/0/F
        jv9PxY7/T8WO/0/Djf9Pwoz/TsGM/07BjP9Owoz/TsKM/03Djf9Nw43/TsSN/07Ejf9OxI3/TcSN/03E
        jf9NxI3/TcSN/0zEjf9MxIz/TMSM/0vEjP9Lw4z/S8OM/0vDi/9Jv4jqQq15fDaQYxNMyYsAt///AAAA
        AAAAAAAA3f//AFfangA/n3MYSbaEjk/DjvFQxY//UMWP/1DFj/9QxY//UMWP/1DFj/9QxY//UMWP/1DF
        j/9QxY7/UMKN/0/Ai/9Pv4r/T8CL/07Bi/9OwYv/TsKM/07DjP9Nwoz/TsON/07Ejf9OxI3/TsSN/07E
        jf9NxI3/TcSN/03Ejf9MxIz/TMSM/0zEjP9Lw4z/S8OM/0vDi/9KwYrzRLWAlTucbRpY6aQA////AAAA
        AAAAAAAA////AFnipgA+oHYYSbeGkE/DjvFQxY//UMWP/1DFj/9QxY//UMWP/1DFj/9QxY//UMWP/1DE
        j/9Pwo3/T7+L/0++iv9Pv4v/T7+L/0/Ai/9OwYz/TsGM/0/DjP9Ow4z/TsON/07Djf9OxI7/TsSN/07E
        jf9OxI3/TsSN/03Ejf9NxI3/TcSN/0zEjP9MxIz/S8OM/0vDjP9KwYrzRLaBmDqdbxta8asA////AAAA
        AAAAAAAA////AFjkpgA+oXYYSbiGj0/DjvFQxY//UMWP/1DFj/9QxY//UMWP/1DFj/9QxY//UMSP/1DC
        jf9Pvor/T72J/0++iv9Pv4v/T7+L/0/Ai/9PwYz/T8GM/0/Cjf9Pw4z/TsON/07Djf9OxI7/TsSO/07E
        jv9OxI3/TsSN/03Ejf9NxI3/TcSN/0zEjP9MxIz/TMSM/0vDjP9KwYrzRbaBmDydbxtb8aoA////AAAA
        AAAAAAAA////AFnkpgA/onYYSbiGj1DDjvFRxZD/UcWQ/1HFkP9RxZD/UcWQ/1HFkP9RxI//UMKN/1C+
        i/9PvYn/T72J/0+9if9Pvor/T76K/0+/i/9PwIv/T8GM/0/Bjf9Pwo3/TsON/07Djf9PxI3/TsSO/07E
        jv9OxI7/TsSN/07Ejf9NxI3/TcSN/03Ejf9NxI3/TMSM/0zEjP9KwYrzRbaBmDydbxtb8asA////AAAA
        AAAAAAAA////AFzkpgBBonYYS7iGj1DDj/FRxZD/UcWQ/1HFkP9RxZD/UcWQ/1HFj/9Rwo3/UL2K/1C8
        if9QvIn/UL2J/0++iv9Pvor/T76K/0+/i/9Pv4v/T8GM/0/Bjf9Qwo3/T8ON/0/Djf9PxI3/TsSO/07E
        jv9OxI7/TsSO/07Ejf9OxI3/TcSN/03Ejf9NxI3/TMSM/0zEjP9LwovzRbaCmDqdcRtZ8a0A////AAAA
        AAAAAAAA////AF/kpgBDonYYTbiGj1HEj/FSxpD/UsaQ/1LGkP9SxpD/UsWP/1LBjP9RvYn/ULuI/1C7
        iP9QvIn/ULyJ/1C9if9Qvor/UL+L/0+/i/9Pv4v/T8CL/0/BjP9PwY3/UMON/0/Djf9Pw47/T8WO/0/F
        jv9OxI7/TsSO/07Ejv9OxI3/TsSN/03Ejf9NxI3/TcSN/0zEjP9LwovzRLaDmDqdcRtZ8a0A////AAAA
        AAAAAAAA////AF/kpgBDonYYTbiGj1LEj/FTxpD/U8aQ/1PGkP9TxY//UsGN/1G7if9RuYf/UbmI/1C6
        iP9Qu4n/UbyJ/1G9if9Qvor/UL6K/1C/i/9QwIz/UMGM/1DBjP9PwYz/UMKN/1DDjf9Pw47/T8WO/0/F
        jv9PxY7/T8WO/07Ejv9OxI7/TsSN/07Ejf9OxI3/TcSN/03Ejf9LwovzRLaDmDqdcRtZ8a0A////AAAA
        AAAAAAAA////AF/kpgBDonYYTbiGj1LEj/FTxpD/U8aQ/1PFj/9SwIz/UbuI/1G4h/9RuYf/UbmI/1G6
        iP9Qu4n/UbuJ/1G8if9Rvor/Ub6K/1G/i/9Qv4v/UMCM/1DBjP9PwYz/UMKN/1DDjf9Pw47/UMWP/1DF
        j/9PxY7/T8WO/07Ejv9OxI7/TsSO/07Ejf9OxI3/TcSN/03Ejf9MwovzRbaDmDqdcRtZ8a0A////AAAA
        AAAAAAAA////AF/kpgBDonUYTbiGj1LEj/FTxpH/U8WQ/1LBjf9Ruoj/UbeG/1G4h/9RuYf/UbmH/1K6
        iP9Ru4n/UbuK/1K8iv9RvYr/Ub6K/1G/i/9Rv4v/UMCM/1HBjf9Qwo3/UMKN/1DDjf9Pw43/UMSO/1DF
        j/9QxY//T8WO/0/Fjv9OxI7/TsSO/07Ejv9OxI3/TsSN/03Ejf9MwozzRreDmDuecRtb8q0A////AAAA
        AAAAAAAA////AF/kpgBDonUYTbiGj1LEj/FTxZD/UsCN/1G5iP9Rt4b/UbeG/1G3hv9RuYf/UbmH/1K6
        iP9Ru4n/UbuJ/1K8iv9SvYr/Ub6K/1G/i/9Rv4v/UcCM/1HBjP9Qwo3/UMKO/1DCjv9Pw43/UMSO/1DF
        j/9QxY//T8WO/0/Fjv9OxI7/TsSO/07Ejv9OxI3/TsSN/03Ejf9MwovzRreDmDyecRtc8q0A////AAAA
        AAAAAAAA////AF3hpABCoHUYTLeFkFLBjfFTvoz/UreH/1Kzhf9StIX/UbWF/1G1hf9Rtob/UbeG/1G4
        hv9RuYf/UbmI/1K6iP9Su4j/UryJ/1K8if9SvYr/Ub6K/1G+iv9Rv4v/UMCM/1DAjf9QwYz/UMKM/1DC
        jf9Qwo3/T8KN/0/Cjf9Pwoz/TsKM/07CjP9Owoz/TsKM/07Ci/9MwIrzRrWCmDudcRtb8KwA////AAAA
        AAAAAAAA////AFvaoABBm3IYS6+BkFC2hvBQsIH/UKx//VCsf/1QrX/9UK5//VCugP1Pr4D9ULCB/VCw
        gf1QsYL9ULKD/VCzg/1QtIP9ULSD/VC0hP1QtYX9T7WF/U+2hf1Pt4X9T7eG/U+4h/1PuYb9TrqH/U66
        h/1Ouof9TrqH/U66h/1Ouof9TbqG/U26hv1Muob9TLqG/Uy5hf5LuITxRa5+lzqYbhtZ5KUA////AAAA
        AAAAAAAA2///AFnMmABCl3EYSqd7jk6rfetOqnz6Tql8+E+pfPhPqnz4T6p8+E+qfPhOq334T6t++E+s
        fvdPrX/4T61/+E+tf/hPrX/4Tq5/+E6ugPhOroD4Ta6A+E6wgPhNsID4TbCA906wf/dNsH/3TbF/902z
        f/dNs3/3TbN/90yyf/dMsX/3TLF+90yxfvdLsX73SrF+90qxfvhJsH7rRKh6lD2WbhpUzpcA5v//AAAA
        AAAAAAAAcP/BAFK9jABFoXcWTbKDi1O/jO5UwY7/VMGN/VTBjf1UwY39VMGN/VTBjv1UwY79VMGO/VTB
        jv1TwY39U8GN/VPBjf1TwY39UsGN/VLBjf1SwY39UsGN/VLBjP1SwYz9UcGM/VHBjP1QwYz9UMGM/VDB
        jP1PwYz9T8GL/U/Bi/1PwYv9T8GL/U7Bi/1OwIr9TcCK/U3Aiv9MvYjvR69+kD+bbxhQx44Akv//AAAA
        AAAAAAAAaPCwAFC3hgBEm3ISTbODfVTFkOxVyJP/VciS/1XIkv9VyJL/VciS/1XIkv9VyJL/VciS/1XI
        kv9Vx5L/VMeS/1THkv9Ux5H/VMeR/1PHkf9Tx5H/U8eR/1PGkf9TxpD/UsaQ/1LGkP9SxpD/UcaQ/1HF
        kP9QxZD/UMWP/1DFj/9QxY//UMWP/0/Fj/9PxY7/TsWO/07Fjv9NwYvtR658gT2TaBRPwIgAkP/4AAAA
        AAAAAAAAcu20AFCkfQBAfWALTap/Y1TEkOZVx5L/VceS/1XHkv9Vx5L/VceS/1XHkv9Vx5L/VceS/1XH
        kv9Vx5L/VceS/1XHkv9UxpH/VMaR/1TGkf9TxpH/U8aR/1PGkf9TxpD/U8aQ/1PGkP9SxpD/UsaQ/1HF
        kP9RxZD/UMWP/1DFj/9QxY//UMWP/0/Fjv9PxY7/T8WO/07Ejv9NwYzmRaZ6ZTZ4WgxHo3kAbv68AAAA
        AAAAAAAASoZsAD9oVgAiBRQDTaN8RVXDkdxWx5P/VseT/1bHk/9Wx5P/VseT/1bHk/9Vx5L/VceS/1TH
        kf9Ux5L/VceS/1XHkv9Vx5L/VceS/1TGkf9UxpH/U8aR/1PGkf9TxpH/U8aQ/1PGkP9SxpD/UsaQ/1HG
        kP9QxY//UMWP/1DFj/9QxY//UMWP/1DFj/9PxY7/T8WO/07Ejv9NwIvcRJ91RRIABgMyX0wAPXxgAAAA
        AAAAAAAAGCYgAAAAAADL//8ASZ12LFW+jcBWxpL9VseT/1bHk/9Wx5P/VseT/1bHk/9Wx5P/WMiU/1zJ
        lv9byJX/VseS/1XHkv9Vx5L/VceS/1TGkf9UxpH/VMaR/1PGkf9TxpH/U8aQ/1PGkP9SxpD/UsaQ/1fH
        k/9Yx5T/U8aR/1DFj/9QxY//UMWP/1DFj/9QxY//T8WO/07Djf1NvIjAQZtxK7T//wAAAAAAEyEbAAAA
        AAAAAAAAAAAAAAAAAAB8/8QAR5RvF1O1h4dWxZHuV8eT/1fHk/9Xx5P/V8eT/1fHk/9eyZj/fNGq/5TX
        uP+L1bP/asyf/1fHk/9Vx5L/VceS/1XHkv9Vx5L/VMaR/1TGkf9TxpH/U8aR/1PGkf9VxpH/Zsuc/4jU
        sf+S17f/edCo/1nHlf9QxY//UMWP/1DFj/9QxY//T8WO/07DjO9LtYOKQZhvF2burQD///8AAAAAAAAA
        AAAAAAAAAgQDAGzlrABRq4EAQoRkCFCxhFNWxJHdV8eT/1fHk/9Xx5P/V8eT/1nHlP960an/yufZ/+Tu
        6f/a6+T/p93E/2LKmv9Ux5H/VceS/1XHkv9Vx5L/VMaR/1TGkf9UxpH/U8aR/1LGkP9gyZj/pNzC/9nr
        4//k7un/yufZ/3nQqP9TxpH/UMWP/1DFj/9QxY//T8WO/0/CjeBKsYFZQI5pCUmofABWxZEAAwUEAAAA
        AAAAAAAAAAAAADVwWAAwYE0A////AE6sgixVwJC1V8aT+lfHlP9Xx5T/VseT/1zIl/+O1rX/4+7p//bz
        9f/08vP/z+jd/23Nof9TxpH/VceS/1XHkv9Vx5L/VceS/1TGkf9UxpH/U8aR/1HFkP9qzJ//zujc//Ty
        8//28/X/5e7q/5LXuP9Yx5T/T8WO/1DFj/9QxY//UMSO+0++i7lIqn4vAAAAADJmUgA2dVsAAAAAAAAA
        AAAAAAAAAAAAABswLwAAAAAAbNijAEqNbwxUsohfV8SS21fHlP9Xx5T/V8eU/1rIlv+C067/0une/+zw
        7v/l7ur/uOLP/2fMnf9UxpL/VceS/1XHkv9Vx5L/VceS/1TGkf9UxpH/VMaR/1HGkP9ky5v/tuHN/+Xu
        6v/s8O7/0une/4TTr/9WxpP/T8WP/1DFj/9QxY//UMGN3U2vgWBDh2YMYtiaAAAAAAAXIiUAAAAAAAAA
        AAAAAAAAAAAAAM3//wBQjHQAN0Y/ANj//wBQpH0gV7+Pl1jHk/NYyJT/WMiU/1fHlP9jypv/jta1/7Th
        zP+o3sX/eNCn/1rIlf9Wx5P/VseT/1XHkv9Vx5L/VceS/1XHkv9UxpH/VMaR/1PGkf9Wx5P/c86k/6Tc
        w/+y4Mv/jNWz/1/JmP9RxZD/UMWP/1DFj/9QxI71T72KoEijeCKa//8ALC8pAEd/ZQCj//8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAhv/JAF29jwBEjGgGVLWHRljDkcNYx5T8WMiU/1jIlP9YyJT/XsmY/2bL
        nf9jypv/WsiV/1fHk/9Wx5P/VseT/1XHkv9Vx5L/VceS/1XHkv9Vx5L/VMaR/1TGkf9TxpH/VceS/1/J
        mP9iypr/WciU/1LGkP9RxZD/UcWQ/1DEj/tQwYzETbKES0GPbQdUt4kAdfe5AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHkEvACZLNACn//8ARpFwDVO0iVVZxJPQWMiU/1jIlP9YyJT/VseU/1XH
        k/9Wx5P/V8eU/1fHk/9Wx5P/VseT/1bHk/9Vx5L/VceS/1XHkv9Vx5L/VMaR/1TGkf9TxpH/U8aR/1LG
        j/9Rxo//UcaP/1LGkP9RxZD/UcWQ/lDBjdFNs4NZQo9sDgAAAAAlRToAIEE0AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVa+CAFCiewA4Z1UAlv/vAEuceBRXvI1vWcSS1FnIlPxYyJT/WMiU/1jI
        lP9Xx5T/V8eU/1fHk/9Xx5P/VseT/1bHk/9Vx5L/VceS/1XHkv9Vx5L/VMaR/1TGkf9TxpH/U8aR/1PG
        kP9TxpD/UsaQ/1LGkP9SxZD9UcKO1U+5h3FEmXEWuP//AEaFaQBfxpgAauKuAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////AP///wCV/+wAX8GUAC5kQgFSqX8XV7mMYlnDkspYxpP3WMiU/1jI
        lP9Xx5T/V8eU/1fHlP9Xx5P/V8eT/1bHk/9Wx5P/VceS/1XHkv9Vx5L/VMaR/1TGkf9TxpH/U8aR/1PG
        kf9TxpD/U8aQ/1LEj/hSwY3MUbeGZUumehgcTTYBXs+YAOr//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8Ag//NAFKlfgDX//8ARIJjFE+le2RWvo3WWMaT+1jI
        lP9YyJT/V8eU/1fHlP9Xx5P/V8eT/1bHk/9Wx5P/VceS/1XHkv9Vx5L/VceS/1TGkf9UxpH/U8aR/1PG
        kf9TxpD/U8SP/FC8idlHpHdlPYBcFf///wBHm3EAf//SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AJUcyEUmac2dWvo7UWMORy1nE
        kspYxpToWMeU/lfHlP9Xx5P/V8eT/1bHk/9Wx5P/VceS/1XHkv9Vx5L/VceS/1TGkf9UxpH/VMaR/1TE
        kOhTwo/LUsCNy067idVAl25oHEEvEf///wAAAAAAAAAAAGPmpwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF+meAAAAAAEQotmOlW6irpZwZDHUbGETVKr
        gzZbvZF1W8aVxljGlONXxpPsV8aT8lfGk/ZWxpP6VsaS+1XGkvpVxpL3VcaS8lTFkexVxZHkV8SSyFa7
        jXZNrYI2S66BTFC+i8VMt4a+OYhkPQAAAAWA/8oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAA=
</value>
  </data>
</root>